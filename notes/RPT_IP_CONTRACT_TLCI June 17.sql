CREATE OR REPLACE PROCEDURE RPT_IP_CONTRACT_TLCI
(
  IN LEG_ID INTEGER
)
LANGUAGE SQL
SPECIFIC SP_RPT_IP_CONTRACT_TLCI
DYNAMIC RESULT SETS 1
BEGIN

  DECLARE S_LEG_ID INTEGER;

  DECLARE GLOBAL TEMPORARY TABLE TEMP_RPT_IP_CONTRACT_TLCI
  (
    LEG_ID INTEGER,
    LD_PD VARCHAR(2),
    LD_PD_ORDER INTEGER,
    DETAIL_LINE_ID INTEGER,
    PICK_UP_BY TIMESTAMP,
    PICK_UP_BY_END TIMESTAMP,
    DELIVER_BY TIMESTAMP,
    DELIVER_BY_END TIMESTAMP,
    TERM_ORIGNAME VARCHAR(40),
    TERM_ORIGADDR1 VARCHAR(40),
    TERM_ORIGADDR2 VARCHAR(40),
    TERM_ORIGCITY VARCHAR(30),
    TERM_ORIGPROV VARCHAR(4),
    TERM_ORIGPC VARCHAR(10),
    TERM_DESTNAME VARCHAR(40),
    TERM_DESTADDR1 VARCHAR(40),
    TERM_DESTADDR2 VARCHAR(40),
    TERM_DESTCITY VARCHAR(30),
    TERM_DESTPROV VARCHAR(4),
    TERM_DESTPC VARCHAR(10),
    STOP_NO INTEGER,
    FBS_ON_LEG INTEGER
  ) WITH REPLACE NOT LOGGED;

  CREATE INDEX SESSION.TEMP_RPT_IP_CONTRACT_TLCI1 ON SESSION.TEMP_RPT_IP_CONTRACT_TLCI(DETAIL_LINE_ID);

  SET S_LEG_ID = RPT_IP_CONTRACT_TLCI.LEG_ID;

  FOR C1 AS

    SELECT
      L.LS_LEG_ID,
      L.LS_LEG_SEQ,
      L.LS_PLANNED_DEPARTURE,
      L.LS_EXPECTED_DATE,
      L.LS_NUM_PU,
      L.LS_NUM_DEL,
      L.LS_INTERLINER,
      CASE
        WHEN L.LS_MT_LOADED = 'E' THEN 'True'
        WHEN OZ.IS_TERMINAL = 'True' THEN 'True'
        WHEN L.LS_LEG_SEQ = (SELECT MIN(LS_LEG_SEQ) FROM LEGSUM WHERE LS_TRIP_NUMBER = L.LS_TRIP_NUMBER AND LS_INTERLINER = L.LS_INTERLINER) AND EXISTS(SELECT 1 FROM LEGSUM WHERE LS_TRIP_NUMBER = L.LS_TRIP_NUMBER AND LS_LEG_SEQ < (SELECT MIN(LS_LEG_SEQ) FROM LEGSUM WHERE LS_TRIP_NUMBER = L.LS_TRIP_NUMBER AND LS_INTERLINER = L.LS_INTERLINER) AND LS_INTERLINER <> L.LS_INTERLINER) THEN 'True'
        ELSE 'False'
      END TERM_ORIG,
      OZ.SHORT_DESCRIPTION TERM_ORIGNAME,
      OZ.ADDRESS1 TERM_ORIGADDR1,
      OZ.ADDRESS2 TERM_ORIGADDR2,
      OZ.CITY TERM_ORIGCITY,
      OZ.PROVINCE TERM_ORIGPROV,
      OZ.POSTAL_CODE TERM_ORIGPC,
      CASE
        WHEN L.LS_MT_LOADED = 'E' THEN 'True'
        WHEN DZ.IS_TERMINAL = 'True' THEN 'True'
        WHEN L.LS_LEG_SEQ = (SELECT MAX(LS_LEG_SEQ) FROM LEGSUM WHERE LS_TRIP_NUMBER = L.LS_TRIP_NUMBER AND LS_INTERLINER = L.LS_INTERLINER) AND EXISTS(SELECT 1 FROM LEGSUM WHERE LS_TRIP_NUMBER = L.LS_TRIP_NUMBER AND LS_LEG_SEQ > (SELECT MAX(LS_LEG_SEQ) FROM LEGSUM WHERE LS_TRIP_NUMBER = L.LS_TRIP_NUMBER AND LS_INTERLINER = L.LS_INTERLINER) AND LS_INTERLINER <> L.LS_INTERLINER) THEN 'True'
        ELSE 'False'
      END TERM_DEST,
      DZ.SHORT_DESCRIPTION TERM_DESTNAME,
      DZ.ADDRESS1 TERM_DESTADDR1,
      DZ.ADDRESS2 TERM_DESTADDR2,
      DZ.CITY TERM_DESTCITY,
      DZ.PROVINCE TERM_DESTPROV,
      DZ.POSTAL_CODE TERM_DESTPC,
      L.LS_MT_LOADED,
      L.LS_FROM_ZONE,
      L.LS_TO_ZONE
    FROM LEGSUM L
    JOIN ZONE OZ ON OZ.ZONE_ID = L.LS_FROM_ZONE
    JOIN ZONE DZ ON DZ.ZONE_ID = L.LS_TO_ZONE
    WHERE L.LS_LEG_ID = S_LEG_ID
    WITH UR

  DO

    IF COALESCE(TERM_ORIG,'') = 'True' THEN

      FOR C2 AS

        SELECT
          T.DETAIL_LINE_ID,
          1 STOP_NO
        FROM ILEGDTL I
        JOIN TLORDER T ON T.DETAIL_LINE_ID = I.ILD_FB_ID
        WHERE I.ILD_RES_TYPE = 'F'
          AND (C1.LS_LEG_SEQ = (SELECT MIN(LS_LEG_SEQ) FROM LEGSUM WHERE LS_TRIP_NUMBER = I.ILD_TRIP_NUMBER AND LS_INTERLINER = C1.LS_INTERLINER) OR EXISTS(SELECT LD_LEG_ID FROM LEGDTL WHERE LD_PD = 'P' AND LD_TYPE = 'F' AND LD_FB_ID = I.ILD_FB_ID AND LD_LEG_ID = I.ILD_LEG_ID) OR C1.LS_FROM_ZONE LIKE 'RR-%')
          AND I.ILD_LEG_ID = S_LEG_ID
        WITH UR

      DO

        INSERT INTO SESSION.TEMP_RPT_IP_CONTRACT_TLCI
        (
          LEG_ID,
          LD_PD,
          LD_PD_ORDER,
          DETAIL_LINE_ID,
          PICK_UP_BY,
          PICK_UP_BY_END,
          TERM_ORIGNAME,
          TERM_ORIGADDR1,
          TERM_ORIGADDR2,
          TERM_ORIGCITY,
          TERM_ORIGPROV,
          TERM_ORIGPC,
          STOP_NO,
          FBS_ON_LEG
        )

        VALUES
        (
          C1.LS_LEG_ID,
          'P',
          1,
          C2.DETAIL_LINE_ID,
          C1.LS_PLANNED_DEPARTURE,
          C1.LS_PLANNED_DEPARTURE,
          C1.TERM_ORIGNAME,
          C1.TERM_ORIGADDR1,
          C1.TERM_ORIGADDR2,
          C1.TERM_ORIGCITY,
          C1.TERM_ORIGPROV,
          C1.TERM_ORIGPC,
          C2.STOP_NO,
          C1.LS_NUM_PU
        );

      END FOR;

    END IF;

    IF COALESCE(TERM_DEST,'') = 'True' THEN

      FOR C2 AS

        SELECT
          T.DETAIL_LINE_ID,
          9999 STOP_NO
        FROM ILEGDTL I
        JOIN TLORDER T ON T.DETAIL_LINE_ID = I.ILD_FB_ID
        WHERE I.ILD_RES_TYPE = 'F'
          AND (
                C1.LS_LEG_SEQ = (SELECT MAX(LS_LEG_SEQ) FROM LEGSUM WHERE LS_TRIP_NUMBER = I.ILD_TRIP_NUMBER AND LS_INTERLINER = C1.LS_INTERLINER) OR
                EXISTS(SELECT LD_LEG_ID FROM LEGDTL WHERE LD_PD = 'D' AND LD_TYPE = 'F' AND LD_FB_ID = I.ILD_FB_ID AND LD_LEG_ID = I.ILD_LEG_ID)
              )
          AND I.ILD_LEG_ID = S_LEG_ID
        WITH UR

      DO

        INSERT INTO SESSION.TEMP_RPT_IP_CONTRACT_TLCI
        (
          LEG_ID,
          LD_PD,
          LD_PD_ORDER,
          DETAIL_LINE_ID,
          DELIVER_BY,
          DELIVER_BY_END,
          TERM_DESTNAME,
          TERM_DESTADDR1,
          TERM_DESTADDR2,
          TERM_DESTCITY,
          TERM_DESTPROV,
          TERM_DESTPC,
          STOP_NO,
          FBS_ON_LEG
        )

        VALUES
        (
          C1.LS_LEG_ID,
          'D',
          9999,
          C2.DETAIL_LINE_ID,
          C1.LS_EXPECTED_DATE,
          C1.LS_EXPECTED_DATE,
          C1.TERM_DESTNAME,
          C1.TERM_DESTADDR1,
          C1.TERM_DESTADDR2,
          C1.TERM_DESTCITY,
          C1.TERM_DESTPROV,
          C1.TERM_DESTPC,
          C2.STOP_NO,
          C1.LS_NUM_DEL
        );

      END FOR;

    END IF;

    IF COALESCE(TERM_ORIG,'') = 'False' THEN

      FOR C2 AS

        SELECT
          I.LD_PD,
          I.LD_PD_ORDER,
          T.DETAIL_LINE_ID,
          (SELECT MIN(LD_PD_ORDER) FROM LEGDTL X JOIN TLORDER Y ON Y.DETAIL_LINE_ID = X.LD_FB_ID WHERE X.LD_TYPE = 'F' AND X.LD_PD = 'P' AND X.LD_LEG_ID = S_LEG_ID AND Y.ORIGNAME = T.ORIGNAME AND Y.START_ZONE = T.START_ZONE WITH UR) STOP_NO
        FROM LEGDTL I
        JOIN TLORDER T ON T.DETAIL_LINE_ID = I.LD_FB_ID
        WHERE I.LD_PD = 'P'
          AND I.LD_TYPE = 'F'
          AND I.LD_LEG_ID = S_LEG_ID

        WITH UR

      DO

        INSERT INTO SESSION.TEMP_RPT_IP_CONTRACT_TLCI
        (
          LEG_ID,
          LD_PD,
          LD_PD_ORDER,
          DETAIL_LINE_ID,
          STOP_NO,
          FBS_ON_LEG
        )

        VALUES
        (
          C1.LS_LEG_ID,
          C2.LD_PD,
          C2.LD_PD_ORDER,
          C2.DETAIL_LINE_ID,
          C2.STOP_NO,
          C1.LS_NUM_PU
        );

      END FOR;

    END IF;

    IF COALESCE(TERM_DEST,'') = 'False' THEN

      FOR C2 AS

        SELECT
          I.LD_PD,
          I.LD_PD_ORDER,
          T.DETAIL_LINE_ID,
          (SELECT MIN(LD_PD_ORDER) FROM LEGDTL X JOIN TLORDER Y ON Y.DETAIL_LINE_ID = X.LD_FB_ID WHERE X.LD_TYPE = 'F' AND X.LD_PD = 'D' AND X.LD_LEG_ID = S_LEG_ID AND Y.DESTNAME = T.DESTNAME AND Y.END_ZONE = T.END_ZONE WITH UR) STOP_NO
        FROM LEGDTL I
        JOIN TLORDER T ON T.DETAIL_LINE_ID = I.LD_FB_ID
        WHERE I.LD_PD = 'D'
          AND I.LD_TYPE = 'F'
          AND I.LD_LEG_ID = S_LEG_ID

        WITH UR

      DO

        INSERT INTO SESSION.TEMP_RPT_IP_CONTRACT_TLCI
        (
          LEG_ID,
          LD_PD,
          LD_PD_ORDER,
          DETAIL_LINE_ID,
          STOP_NO,
          FBS_ON_LEG
        )

        VALUES(
          C1.LS_LEG_ID,
          C2.LD_PD,
          C2.LD_PD_ORDER,
          C2.DETAIL_LINE_ID,
          C2.STOP_NO,
          C1.LS_NUM_DEL
        );

      END FOR;

    END IF;

    IF COALESCE(C1.LS_MT_LOADED,'') = 'E' THEN

      INSERT INTO SESSION.TEMP_RPT_IP_CONTRACT_TLCI
      (
        LEG_ID,
        LD_PD,
        LD_PD_ORDER,
        DETAIL_LINE_ID,
        PICK_UP_BY,
        PICK_UP_BY_END,
        TERM_ORIGNAME,
        TERM_ORIGADDR1,
        TERM_ORIGADDR2,
        TERM_ORIGCITY,
        TERM_ORIGPROV,
        TERM_ORIGPC,
        STOP_NO,
        FBS_ON_LEG
      )

      VALUES
      (
        C1.LS_LEG_ID,
        'P',
        1,
        0,
        C1.LS_PLANNED_DEPARTURE,
        C1.LS_PLANNED_DEPARTURE,
        C1.TERM_ORIGNAME,
        C1.TERM_ORIGADDR1,
        C1.TERM_ORIGADDR2,
        C1.TERM_ORIGCITY,
        C1.TERM_ORIGPROV,
        C1.TERM_ORIGPC,
        9999,
        C1.LS_NUM_DEL
      );

      -- INSERT INTO SESSION.TEMP_RPT_IP_CONTRACT_TLCI
      -- (
        -- LEG_ID,
        -- LD_PD,
        -- LD_PD_ORDER,
        -- DETAIL_LINE_ID,
        -- DELIVER_BY,
        -- DELIVER_BY_END,
        -- TERM_DESTNAME,
        -- TERM_DESTADDR1,
        -- TERM_DESTADDR2,
        -- TERM_DESTCITY,
        -- TERM_DESTPROV,
        -- TERM_DESTPC,
        -- STOP_NO,
        -- FBS_ON_LEG
      -- )

      -- VALUES
      -- (
        -- C1.LS_LEG_ID,
        -- 'D',
        -- 9999,
        -- 0,
        -- C1.LS_EXPECTED_DATE,
        -- C1.LS_EXPECTED_DATE,
        -- C1.TERM_DESTNAME,
        -- C1.TERM_DESTADDR1,
        -- C1.TERM_DESTADDR2,
        -- C1.TERM_DESTCITY,
        -- C1.TERM_DESTPROV,
        -- C1.TERM_DESTPC,
        -- 9999,
        -- C1.LS_NUM_DEL
      -- );

    END IF;

  END FOR;

  BEGIN
    DECLARE C_RESULT_SET CURSOR WITH RETURN TO CALLER FOR

      --FREIGHT
      SELECT
        L.LEG_ID,
        L.LD_PD,
        L.LD_PD_ORDER,
        L.DETAIL_LINE_ID,
        COALESCE(L.PICK_UP_BY, T.PICK_UP_BY) PICK_UP_BY,
        COALESCE(L.PICK_UP_BY_END, T.PICK_UP_BY_END) PICK_UP_BY_END,
        COALESCE(L.DELIVER_BY, T.DELIVER_BY) DELIVER_BY,
        COALESCE(L.DELIVER_BY_END, T.DELIVER_BY_END) DELIVER_BY_END,
        L.TERM_ORIGNAME,
        L.TERM_ORIGADDR1,
        L.TERM_ORIGADDR2,
        L.TERM_ORIGCITY,
        L.TERM_ORIGPROV,
        L.TERM_ORIGPC,
        L.TERM_DESTNAME,
        L.TERM_DESTADDR1,
        L.TERM_DESTADDR2,
        L.TERM_DESTCITY,
        L.TERM_DESTPROV,
        L.TERM_DESTPC,
        L.STOP_NO,
        L.FBS_ON_LEG,
        T.BILL_NUMBER,
        T.ORIGNAME,
        T.ORIGADDR1,
        T.ORIGADDR2,
        T.ORIGCITY,
        T.ORIGPROV,
        T.ORIGPC,
        T.ORIGCONTACT,
        T.ORIGPHONE,
        T.ORIGEMAIL,
        C1.OPEN_TIME ORIGOPEN,
        C1.CLOSE_TIME ORIGCLOSE,
        T.DESTNAME,
        T.DESTADDR1,
        T.DESTADDR2,
        T.DESTCITY,
        T.DESTPROV,
        T.DESTPC,
        T.DESTCONTACT,
        T.DESTPHONE,
        T.DESTEMAIL,
        C2.OPEN_TIME DESTOPEN,
        C2.CLOSE_TIME DESTCLOSE,
        D.DESCRIPTION,
        D.PIECES,
        D.PALLETS,
        D.WEIGHT,
        D.WEIGHT_UNITS,
        D.LENGTH_1,
        D.LENGTH_UNITS,
        D.WIDTH,
        D.WIDTH_UNITS,
        D.HEIGHT,
        D.HEIGHT_UNITS,
        D.CUBE,
        D.CUBE_UNITS,
        NVL(D.TEMPERATURE, -999) TEMPERATURE,
        D.TEMPERATURE_UNITS,
        D.TEMP_CONTROLLED,
		D.UN_NUMBER, 
        T.TARP,
        T.HIGH_VALUE,
        T.DANGEROUS_GOODS,
        C.CUSTOMS_NAME,
        C.CUSTOMS_PHONE,
        C.CUSTOMS_FAX,
        C.CUSTOMS_EMAIL,
        C.CUSTOMS_ADDR1,
        C.CUSTOMS_ADDR2,
        C.CUSTOMS_CITY,
        C.CUSTOMS_PROV,
        C.CUSTOMS_PC,
        C.CUSTOMS_CONTACT,
        CASE WHEN C.ORIG_COUNTRY = 'CA' THEN
          (
            SELECT DESCRIPTION
            FROM EDI_ACE_RES_CODES
            WHERE SEG_NAME = 'PR'
              AND ELE_NBR = 1
              AND VALUE = C.PORT_OF_ENTRY
            LIMIT 1
          )
        ELSE
          (
            SELECT DESCRIPTION
            FROM EDI_ACI_RES_CODES
            WHERE SEG_NAME = 'PR'
              AND ELE_NBR = 1
              AND VALUE = C.PORT_OF_ENTRY
            LIMIT 1
          )
        END PORT_OF_ENTRY,
        T.PICK_UP_APPT_REQ,
        T.PICK_UP_APPT_MADE,
        T.DELIVERY_APPT_REQ,
        T.DELIVERY_APPT_MADE,
        NULL CONTAINER_NUMBER,
        NULL CONTAINER_SIZE,
        NULL CONTAINER_TYPE,
        NULL CONTAINER_OWNER,
        NULL VESSEL,
        NULL VOYAGE,
        T.PICK_UP_APPT,
        T.DELIVERY_APPT,
        CASE
          WHEN L.LD_PD = 'P' THEN (SELECT LISTAGG(DISTINCT DESC || ': ' || TRACE_NUMBER, ', ') FROM TRACE WHERE 1 = 1 AND TRACE_TYPE IN ('B', 'P', 'K', 'S', 'V', '1') AND DETAIL_NUMBER = T.DETAIL_LINE_ID) 
          WHEN L.LD_PD = 'D' THEN (SELECT LISTAGG(DISTINCT DESC || ': ' || TRACE_NUMBER, ', ') FROM TRACE WHERE 1 = 1 AND TRACE_TYPE IN ('B', 'P', 'K', 'S', 'V', '2') AND DETAIL_NUMBER = T.DETAIL_LINE_ID) 
          ELSE ''
        END TRACE,
        (SELECT CODEDESC FROM EQCLASS WHERE CODE = T.REQUESTED_EQUIPMEN LIMIT 1) EQUIP_TYPE,
        CASE
          WHEN L.LD_PD = 'P' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'TLORDER' AND NOTE_TYPE = '1' AND ID_KEY = CHAR(T.DETAIL_LINE_ID) LIMIT 1)
          WHEN L.LD_PD = 'D' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'TLORDER' AND NOTE_TYPE = '2' AND ID_KEY = CHAR(T.DETAIL_LINE_ID) LIMIT 1)
          ELSE ''
        END LOCATION_NOTES,
        S.LS_FROM_ZONE,
        S.LS_TO_ZONE,
        CASE
          WHEN L.LD_PD = 'P' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'CLIENT' AND NOTE_TYPE = 'D' AND ID_KEY = T.ORIGIN LIMIT 1)
          WHEN L.LD_PD = 'D' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'CLIENT' AND NOTE_TYPE = 'D' AND ID_KEY = T.DESTINATION LIMIT 1)
          ELSE ''
        END DIRECTIONS,
        D.SEQUENCE,
        D.SORT_ORDER
      FROM SESSION.TEMP_RPT_IP_CONTRACT_TLCI L
      JOIN TLORDER T ON T.DETAIL_LINE_ID = L.DETAIL_LINE_ID
      JOIN LEGSUM S ON S.LS_LEG_ID = L.LEG_ID
      LEFT JOIN TLDTL D ON D.ORDER_ID = T.DETAIL_LINE_ID AND D.PICK_ID = 0 AND D.DEFICIT = 0
      LEFT JOIN TLORDER_CUSTOMS C ON C.DETAIL_LINE_ID = T.DETAIL_LINE_ID AND (C.DEFAULT_BROKER = 'True')
      LEFT JOIN CONTAINER_TLORDER N ON N.DLID = T.IM_LOADED
      LEFT JOIN CLIENT C1 ON C1.CLIENT_ID = T.ORIGIN
      LEFT JOIN CLIENT C2 ON C1.CLIENT_ID = T.DESTINATION
      WHERE 1 = 1

      UNION ALL

      --SHIP INSTRUCT
      SELECT
        L.LEG_ID,
        L.LD_PD || '1' LD_PD,
        L.LD_PD_ORDER,
        L.DETAIL_LINE_ID,
        COALESCE(L.PICK_UP_BY, T.PICK_UP_BY) PICK_UP_BY,
        COALESCE(L.PICK_UP_BY_END, T.PICK_UP_BY_END) PICK_UP_BY_END,
        COALESCE(L.DELIVER_BY, T.DELIVER_BY) DELIVER_BY,
        COALESCE(L.DELIVER_BY_END, T.DELIVER_BY_END) DELIVER_BY_END,
        L.TERM_ORIGNAME,
        L.TERM_ORIGADDR1,
        L.TERM_ORIGADDR2,
        L.TERM_ORIGCITY,
        L.TERM_ORIGPROV,
        L.TERM_ORIGPC,
        L.TERM_DESTNAME,
        L.TERM_DESTADDR1,
        L.TERM_DESTADDR2,
        L.TERM_DESTCITY,
        L.TERM_DESTPROV,
        L.TERM_DESTPC,
        L.STOP_NO,
        L.FBS_ON_LEG,
        T.BILL_NUMBER,
        T.ORIGNAME,
        T.ORIGADDR1,
        T.ORIGADDR2,
        T.ORIGCITY,
        T.ORIGPROV,
        T.ORIGPC,
        T.ORIGCONTACT,
        T.ORIGPHONE,
        T.ORIGEMAIL,
        C1.OPEN_TIME ORIGOPEN,
        C1.CLOSE_TIME ORIGCLOSE,
        T.DESTNAME,
        T.DESTADDR1,
        T.DESTADDR2,
        T.DESTCITY,
        T.DESTPROV,
        T.DESTPC,
        T.DESTCONTACT,
        T.DESTPHONE,
        T.DESTEMAIL,
        C2.OPEN_TIME DESTOPEN,
        C2.CLOSE_TIME DESTCLOSE,
        I.INSTRUCTION,
        NULL PIECES,
        NULL PALLETS,
        NULL WEIGHT,
        NULL WEIGHT_UNITS,
        NULL LENGTH_1,
        NULL LENGTH_UNITS,
        NULL WIDTH,
        NULL WIDTH_UNITS,
        NULL HEIGHT,
        NULL HEIGHT_UNITS,
        NULL CUBE,
        NULL CUBE_UNITS,
        NULL TEMPERATURE,
        NULL TEMPERATURE_UNITS,
        NULL TEMP_CONTROLLED,
		NULL UN_NUMBER,
        T.TARP,
        T.HIGH_VALUE,
        T.DANGEROUS_GOODS,
        C.CUSTOMS_NAME,
        C.CUSTOMS_PHONE,
        C.CUSTOMS_FAX,
        C.CUSTOMS_EMAIL,
        C.CUSTOMS_ADDR1,
        C.CUSTOMS_ADDR2,
        C.CUSTOMS_CITY,
        C.CUSTOMS_PROV,
        C.CUSTOMS_PC,
        C.CUSTOMS_CONTACT,
        CASE WHEN C.ORIG_COUNTRY = 'CA' THEN
          (
            SELECT DESCRIPTION
            FROM EDI_ACE_RES_CODES
            WHERE SEG_NAME = 'PR'
              AND ELE_NBR = 1
              AND VALUE = C.PORT_OF_ENTRY
            LIMIT 1
          )
        ELSE
          (
            SELECT DESCRIPTION
            FROM EDI_ACI_RES_CODES
            WHERE SEG_NAME = 'PR'
              AND ELE_NBR = 1
              AND VALUE = C.PORT_OF_ENTRY
            LIMIT 1
          )
        END PORT_OF_ENTRY,
        T.PICK_UP_APPT_REQ,
        T.PICK_UP_APPT_MADE,
        T.DELIVERY_APPT_REQ,
        T.DELIVERY_APPT_MADE,
        NULL CONTAINER_NUMBER,
        NULL CONTAINER_SIZE,
        NULL CONTAINER_TYPE,
        NULL CONTAINER_OWNER,
        NULL VESSEL,
        NULL VOYAGE,
        T.PICK_UP_APPT,
        T.DELIVERY_APPT,
        CASE
          WHEN L.LD_PD = 'P' THEN (SELECT LISTAGG(DISTINCT DESC || ': ' || TRACE_NUMBER, ', ') FROM TRACE WHERE 1 = 1 AND TRACE_TYPE IN ('B', 'P', 'K', 'S', 'V', '1') AND DETAIL_NUMBER = T.DETAIL_LINE_ID) 
          WHEN L.LD_PD = 'D' THEN (SELECT LISTAGG(DISTINCT DESC || ': ' || TRACE_NUMBER, ', ') FROM TRACE WHERE 1 = 1 AND TRACE_TYPE IN ('B', 'P', 'K', 'S', 'V', '2') AND DETAIL_NUMBER = T.DETAIL_LINE_ID) 
          ELSE ''
        END TRACE,        
        (SELECT CODEDESC FROM EQCLASS WHERE CODE = T.REQUESTED_EQUIPMEN LIMIT 1) EQUIP_TYPE,
        CASE
          WHEN L.LD_PD = 'P' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'TLORDER' AND NOTE_TYPE = '1' AND ID_KEY = CHAR(T.DETAIL_LINE_ID) LIMIT 1)
          WHEN L.LD_PD = 'D' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'TLORDER' AND NOTE_TYPE = '2' AND ID_KEY = CHAR(T.DETAIL_LINE_ID) LIMIT 1)
          ELSE ''
        END LOCATION_NOTES,
        S.LS_FROM_ZONE,
        S.LS_TO_ZONE,
        CASE
          WHEN L.LD_PD = 'P' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'CLIENT' AND NOTE_TYPE = 'D' AND ID_KEY = T.ORIGIN LIMIT 1)
          WHEN L.LD_PD = 'D' THEN (SELECT THE_NOTE FROM NOTES WHERE PROG_TABLE = 'CLIENT' AND NOTE_TYPE = 'D' AND ID_KEY = T.DESTINATION LIMIT 1)
          ELSE ''
        END DIRECTIONS,
        NULL SEQUENCE,
        NULL SORT_ORDER
      FROM SESSION.TEMP_RPT_IP_CONTRACT_TLCI L
      JOIN TLORDER T ON T.DETAIL_LINE_ID = L.DETAIL_LINE_ID
      JOIN LEGSUM S ON S.LS_LEG_ID = L.LEG_ID
      JOIN TLSHIPINSTRUCT S ON S.ORDER_ID = T.DETAIL_LINE_ID
      JOIN SHIPINSTRUCT I ON I.INSTRUCTION_ID = S.INSTRUCTION_ID
      LEFT JOIN TLORDER_CUSTOMS C ON C.DETAIL_LINE_ID = T.DETAIL_LINE_ID AND (C.DEFAULT_BROKER = 'True')
      LEFT JOIN CONTAINER_TLORDER N ON N.DLID = T.IM_LOADED
      LEFT JOIN CLIENT C1 ON C1.CLIENT_ID = T.ORIGIN
      LEFT JOIN CLIENT C2 ON C1.CLIENT_ID = T.DESTINATION
      WHERE 1 = 1
        AND (I.APPLIES_TO = L.LD_PD OR I.APPLIES_TO = 'B')
        AND S.ACTIVE = 'True'

      UNION ALL

      --EMPTY
      SELECT
        L.LEG_ID,
        L.LD_PD,
        L.LD_PD_ORDER,
        L.DETAIL_LINE_ID,
        L.PICK_UP_BY,
        L.PICK_UP_BY_END,
        L.DELIVER_BY,
        L.DELIVER_BY_END,
        L.TERM_ORIGNAME,
        L.TERM_ORIGADDR1,
        L.TERM_ORIGADDR2,
        L.TERM_ORIGCITY,
        L.TERM_ORIGPROV,
        L.TERM_ORIGPC,
        L.TERM_DESTNAME,
        L.TERM_DESTADDR1,
        L.TERM_DESTADDR2,
        L.TERM_DESTCITY,
        L.TERM_DESTPROV,
        L.TERM_DESTPC,
        L.STOP_NO,
        L.FBS_ON_LEG,
        NULL BILL_NUMBER,
        NULL ORIGNAME,
        NULL ORIGADDR1,
        NULL ORIGADDR2,
        NULL ORIGCITY,
        NULL ORIGPROV,
        NULL ORIGPC,
        NULL ORIGCONTACT,
        NULL ORIGPHONE,
        NULL ORIGEMAIL,
        NULL ORIGOPEN,
        NULL ORIGCLOSE,
        NULL DESTNAME,
        NULL DESTADDR1,
        NULL DESTADDR2,
        NULL DESTCITY,
        NULL DESTPROV,
        NULL DESTPC,
        NULL DESTCONTACT,
        NULL DESTPHONE,
        NULL DESTEMAIL,
        NULL DESTOPEN,
        NULL DESTCLOSE,        
        NULL DESCRIPTION,
        NULL PIECES,
        NULL PALLETS,
        NULL WEIGHT,
        NULL WEIGHT_UNITS,
        NULL LENGTH_1,
        NULL LENGTH_UNITS,
        NULL WIDTH,
        NULL WIDTH_UNITS,
        NULL HEIGHT,
        NULL HEIGHT_UNITS,
        NULL CUBE,
        NULL CUBE_UNITS,
        NULL TEMPERATURE,
        NULL TEMPERATURE_UNITS,
        'False' TEMP_CONTROLLED,
		NULL UN_NUMBER,
        NULL TARP,
        NULL HIGH_VALUE,
        NULL DANGEROUS_GOODS,
        NULL CUSTOMS_NAME,
        NULL CUSTOMS_PHONE,
        NULL CUSTOMS_FAX,
        NULL CUSTOMS_EMAIL,
        NULL CUSTOMS_ADDR1,
        NULL CUSTOMS_ADDR2,
        NULL CUSTOMS_CITY,
        NULL CUSTOMS_PROV,
        NULL CUSTOMS_PC,
        NULL CUSTOMS_CONTACT,
        NULL PORT_OF_ENTRY,
        NULL PICK_UP_APPT_REQ,
        NULL PICK_UP_APPT_MADE,
        NULL DELIVERY_APPT_REQ,
        NULL DELIVERY_APPT_MADE,
        NULL CONTAINER_NUMBER,
        NULL CONTAINER_SIZE,
        NULL CONTAINER_TYPE,
        NULL CONTAINER_OWNER,
        NULL VESSEL,
        NULL VOYAGE,
        NULL PICK_UP_APPT,
        NULL DELIVERY_APPT,
        NULL TRACE,
        NULL EQUIP_TYPE,
        NULL LOCATION_NOTES,
        S.LS_FROM_ZONE,
        S.LS_TO_ZONE,
        NULL DIRECTIONS,
        NULL SEQUENCE,
        NULL SORT_ORDER
      FROM SESSION.TEMP_RPT_IP_CONTRACT_TLCI L
      JOIN LEGSUM S ON S.LS_LEG_ID = L.LEG_ID
      WHERE L.DETAIL_LINE_ID = 0
        AND 1 = 1;

    OPEN C_RESULT_SET;
  END;
END

